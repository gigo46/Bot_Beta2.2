import express from 'express';
import multer from 'multer';
import cors from 'cors';
import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';
import { GoogleGenerativeAI } from '@google/generative-ai';
import fetch from 'node-fetch'; // Pastikan Anda sudah menginstal node-fetch

// --- Setup path ---
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

const app = express();
const upload = multer({ dest: 'uploads/' });
const PORT = 3000;

// Ganti dengan API key Anda langsung di sini
const API_KEY = 'AIzaSyBU7Uq23HmsIN98dXAhvS2E18eA8AVtFXI'; 
const genAI = new GoogleGenerativeAI(API_KEY);

// Middleware
app.use(cors());
app.use(express.json());
app.use(express.static('public'));

// ------------------
// Routing halaman
// ------------------
app.get('/', (req, res) => {
  res.sendFile(path.join(__dirname, 'public', 'Beranda', 'Beranda.html'));
});

app.get('/Kalender', (req, res) => {
  res.sendFile(path.join(__dirname, 'public', 'Kalender', 'Kalender.html'));
});

app.get('/ChatAI', (req, res) => {
  res.sendFile(path.join(__dirname, 'public', 'ChatAI', 'ChatAI.html'));
});

app.get('/Media', (req, res) => {
  res.sendFile(path.join(__dirname, 'public', 'Media', 'Media.html'));
});

// ------------------
// API Chat teks & gambar
// ------------------
app.post('/api/chat', upload.single('image'), async (req, res) => {
  const userText = req.body.text || req.body.message || '';
  const imageFile = req.file;

  if (!userText && !imageFile) {
    return res.status(400).json({ error: 'Tidak ada teks atau gambar yang diterima.' });
  }
  
  try {
    const model = genAI.getGenerativeModel({ model: 'gemini-2.0-flash' });
    const parts = [{ text: userText }];

    // Jika ada gambar, tambahkan ke parts
    if (imageFile) {
        parts.push({
            inlineData: {
                mimeType: imageFile.mimetype,
                data: fs.readFileSync(imageFile.path).toString('base64')
            }
        });
    }

    const result = await model.generateContent({ contents: [{ parts }] });
    const response = await result.response;
    const textResponse = response.text();

    // Hapus file gambar setelah digunakan
    if (imageFile) {
      fs.unlinkSync(imageFile.path);
    }
    
    res.json({ reply: textResponse });

  } catch (err) {
    if (imageFile) {
      try { fs.unlinkSync(imageFile.path); } catch (e) {}
    }
    console.error('Gemini API Error:', err);
    res.status(500).json({ error: 'Terjadi kesalahan saat memproses permintaan.' });
  }
});

// ------------------
// Jalankan server
// ------------------
app.listen(PORT, () => {
  console.log(`âœ… Server berjalan di http://localhost:${PORT}`);
});
